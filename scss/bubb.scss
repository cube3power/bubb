$bubb-tip-size: .65em; // calc... -> must include units (em, px...)
$bubb-offset: .15em; // calc...
$bubb-transition-distance: .65em; // calc...
$bubb-transition-expression: cubic-bezier(0,0,.25,1); //cubic-bezier(.25,.8,.25,1);
$bubb-transition-delay: 0s; // global
$bubb-transition-delay-option: .5s; // enabled by bubb-delay class
$bubb-background: #444;
$bubb-color: #fff;
$bubb-border-radius: 4px;
$bubb-font-size: 17px;

@mixin bubbStyle() {
  padding: .75em 1em .85em;
  line-height: 1.1;
  font-size: $bubb-font-size;
  text-align: center;
  border-radius: $bubb-border-radius;
  background-color: $bubb-background;
  border-bottom-color: $bubb-background;
  color: $bubb-color;
  cursor: default;
  min-width: 150px;
  width: 100%;
  box-sizing: border-box;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  @include boxShadow();
}
@mixin bubbTip($width) {
  width: 0;
  height: 0;
  border-right: $width solid transparent;
  border-left: $width solid transparent;
  border-bottom-width: $width;
  border-bottom-style: solid;
  border-bottom-color: inherit;
  // border bottom properties are split to make tip-color changes through js possible by altering border-bottom-color on parent
}
@mixin boxShadow() {
  box-shadow: rgba(#fad, .35) 6px 7px 0 0;
  //box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
}
@mixin bubbTipPseudo($width) {
  width: 0;
  height: 0;
  border-bottom: $width solid $bubb-background;
  border-right: $width solid transparent;
  border-left: $width solid transparent;
}
@mixin bubbTransition() {
  transition: opacity .3s $bubb-transition-expression, bottom .3s $bubb-transition-expression;
  transition-delay: $bubb-transition-delay;
}
@mixin bubbMenuStyle() {
  aside {
    padding: 0!important;
    div {
      padding: .75em 0;
      text-transform: uppercase;
      letter-spacing: 2px;
      font-size: 72.5%;
      font-weight: bold;
      color: #ddd;
      border-bottom: 1px solid rgba(#fff, .15);
      transition: background .3s cubic-bezier(0,0,0,.75);
      &:first-child {
        padding-top: 1em;
      }
      &:hover {
        background: rgba(#fff, .1);
        color: #fff;
        border-color: transparent;
      }
    }
  }
}
@mixin userSelectNone() {
  -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none; /* Safari */
     -khtml-user-select: none; /* Konqueror HTML */
       -moz-user-select: none; /* Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
            user-select: none; /* Non-prefixed version, currently supported by Chrome and Opera */
}

/*
--- Bubb as html element
*/
.bubb {
  position: relative;
  word-wrap: break-word;
  hyphens: auto;
  @include userSelectNone();
  aside {
    position: absolute;
    z-index: 1;
    display: block;
    visibility: hidden;
    transform: translate(-50%, 100%);
    bottom: calc( -#{$bubb-tip-size} - ( #{$bubb-transition-distance} + #{$bubb-offset} ) );
    left: 50%;
    pointer-events: none;
    opacity: 0;
    @include bubbStyle();
    &:after {
      content: '';
      position: absolute;
      transform: translate(-50%, 0);
      top: calc( 1px - #{$bubb-tip-size} );
      left: 50%;
      @include bubbTip($bubb-tip-size);
    }
    &:hover {
      display: none;
    }
    &:empty {
      display: none;
    }
  }
  &:hover {
    aside {
      @include bubbTransition();
      visibility: visible;
      bottom: calc( -#{$bubb-tip-size} - #{$bubb-offset} );
      pointer-events: all;
      opacity: 1;
    }
  }

  /*
  --- Make bubb hoverable
  */
  &-interactive {
    &:before {
      content: '';
      position: absolute;
      display: block;
      width: 100%;
      min-width: 150px;
      height: calc( #{$bubb-tip-size} + #{$bubb-offset} );
      bottom: calc( -#{$bubb-tip-size} - #{$bubb-offset} );
      left: 0;
    }
    aside {
      &:hover {
        display: block;
      }
      > div {
        cursor: pointer;
      }
    }
  }

  /*
  --- Remove transition
  */
  &-still {
    &:hover {
      aside {
        transition-duration: 0s;
      }
    }
  }

  /*
  --- Delayed reveal
  */
  &-delayed {
    &:hover {
      aside {
        transition-delay: $bubb-transition-delay-option;
      }
    }
  }

  /*
  --- Default menu style
  */
  &-menu {
    @include bubbMenuStyle();
  }

}



/*
--- Bubb as pseudo element, attribute only
*/
[bubb] {
  position: relative;
  &:before, &:after {
    position: absolute;
    pointer-events: none;
    visibility: hidden;
    z-index: 1;
  }
  &:after {
    content: attr(bubb);
    transform: translate(-50%, 100%);
    left: 50%;
    bottom: calc( 0px - ( #{$bubb-tip-size} + #{$bubb-offset} ) );
    @include bubbStyle();
  }
  &:before {
    content: '';
    transform: translate(-50%, 100%);
    left: 50%;
    bottom: -$bubb-offset;
    @include bubbTipPseudo($bubb-tip-size);
  }
  &:hover {
    &:before, &:after {
      transition-delay: $bubb-transition-delay;
      visibility: visible;
    }
  }
  &.bubb-delayed:hover {
    &:before, &:after {
      transition-delay: $bubb-transition-delay-option;
    }
  }
}
